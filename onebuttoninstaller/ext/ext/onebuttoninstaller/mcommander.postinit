<?php
$command = "mcommander.sh";
$cmd = dirname(__FILE__)."/".$command;
require_once("config.inc");
require_once("functions.inc");

// remove existing old rc format entries
if (is_array($config['rc']) && is_array($config['rc']['postinit']) && is_array( $config['rc']['postinit']['cmd'])) {
    for ($i = 0; $i < count($config['rc']['postinit']['cmd']); ++$i) {
        if (preg_match("/$command/", $config['rc']['postinit']['cmd'][$i])) unset($config['rc']['postinit']['cmd'][$i]);
    }
}
// remove existing entries for new rc format
$sphere_array = &$config['rc']['param'];
if (is_array($config['rc']) && is_array($config['rc']['param'])) {
    for ($i = 0; $i < count($config['rc']['param']); ++$i) {
		if (false !== ($index = array_search_ex("/$command/", $sphere_array, 'value'))) unset($sphere_array[$index]);
	}
}

// check FreeBSD release
$release = explode("-", exec("uname -r"));

if ($release[0] >= 11.0) {	// new rc format
	// postinit command
	$rc_param = [];
	$rc_param['uuid'] = uuid();
	$rc_param['name'] = "MidnightCommander Extension";
	$rc_param['value'] = "{$cmd}";
	$rc_param['comment'] = "Start MidnightCommander";
	$rc_param['typeid'] = '2';
	$rc_param['enable'] = true;
	$config['rc']['param'][] = $rc_param;
}
else {
	$config['rc']['postinit']['cmd'][] = "{$cmd}";
}
write_config();
?>
